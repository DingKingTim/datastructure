cscope 15 /Volumes/Samsung_T5/turior/datastructure/tree               0000013459
	@binary.h

9 #i‚de‡
_BINARY_H_


10 
	#_BINARY_H_


	)

11 
	~"queue.h
"

12 
	~"comm⁄.h
"

13 
	~<io°ªam
>

15 
	#TREE_DEBUG
 0

	)

17 
	ebuût_e
 {

18 
	mBuûdTªeByMidAndPªOrdî
 = 0,

19 
	mBuûdTªeByMidAndP°Ordî
,

20 
	mBuûdTªeByMidAndLvlOrdî
,

21 
	mBuûdTªeByBSTLvlOrdî
,

22 } 
	tbuût_t
;

24 
	gãm∂©e
 <
˛ass
 
	gT
>

25 ˛as†
	cNode
 {

27 
	mpublic
:

28 
	$Node
(
T
 
d
Ë: 
	`d©a
(d), 
	`l_chûd
(
nuŒ±r
), 
	$r_chûd
(
nuŒ±r
) {}

29 
T
 
d©a
;

30 
Node
<
T
>* 
l_chûd
;

31 
Node
<
T
>* 
r_chûd
;

32 
Node
<
T
>* 
∑ª¡s
;

33 
	}
};

35 
	gãm∂©e
 <
˛ass
 
	gT
>

36 ˛as†
	cBö¨yTªe
 {

37 
	mpublic
:

42 
Bö¨yTªe
(
T
* 
Ÿh
,

43 
T
* 
mid
,

44 
buût_t
 
t
,

45 
size
=0, 
¥öt_t
 
p
=
nuŒ±r
, 
com∑ª_t
 
c
=nullptr);

46 
Bö¨yTªe
(
T
* 
£q
, 
size
);

47 
¥e_åavî£
();

48 
mid_åavî£
();

49 
po°_åavî£
();

50 
bªadth_åavî£
();

51 
size_t
 
dïth
();

52 
size_t
 
	$size
(Ë{ 
this
->
size_
;}

54 
¥iv©e
:

55 
	`_¥e_åavî£
(
Node
<
T
>* 
n
);

56 
	`_mid_åavî£
(
Node
<
T
>* 
n
);

57 
	`_po°_åavî£
(
Node
<
T
>* 
n
);

58 
	`_bªadth_åavî£
(
Node
<
T
>* 
n
);

59 
size_t
 
	`_dïth
(
Node
<
T
>* 
node
);

60 
	`_£¨ch
(
T
* 
mid
, T 
d©a
, 
°¨t
, 
íd
);

61 
T
* 
	`_£¨chMidInLvl
(T* 
mid
, 
°¨t
, 
íd
, T* 
lvl
, 
Àn
);

62 
Node
<
T
>* 
	`_c⁄°ru˘WôhB°LvlOrdî
(Node<T> *
r
, T 
d©a
);

63 
Node
<
T
>* 
	`_buûdTªeWôhPªMidOrdî
(T* 
¥e
, T* 
mid
, 
°¨t
, 
íd
);

64 
Node
<
T
>* 
	`_buûdTªeWôhPo°MidOrdî
(T* 
p°
, T* 
mid
, 
°¨t
, 
íd
);

65 
Node
<
T
>* 
	`_buûdTªeWôhLvlMidOrdî
(T* 
lvl
, T* 
mid
, 
°¨t
, 
íd
, 
Àn
);

66 
Node
<
T
>* 
	`_buûdTªeWôhB°LvlOrdî
(T* 
b°
, 
size
);

68 
¥iv©e
:

69 
size_t
 
size_
;

70 
Node
<
T
>* 
roŸ_
;

71 
¥öt_t
 
¥öt_
;

72 
com∑ª_t
 
com∑ª_
;

73 
	}
};

76 
	gãm∂©e
 <
˛ass
 
	gT
>

77 
	gBö¨yTªe
<
	gT
>::
	$Bö¨yTªe
(
T
* 
Ÿh
, T* 
mid
, 
buût_t
 
t
, 
size
, 
¥öt_t
 
p
, 
com∑ª_t
 
cmp
) :

78 
	`size_
(0),

79 
	`roŸ_
(
nuŒ±r
),

80 
	`¥öt_
(
p
),

81 
	$com∑ª_
(
cmp
) {

83 
t
) {

84 
BuûdTªeByMidAndPªOrdî
:

85 
this
->
roŸ_
 =Åhis->
	`_buûdTªeWôhPªMidOrdî
(
Ÿh
, 
mid
, 0, 
size
-1);

88 
BuûdTªeByMidAndP°Ordî
:

89 
this
->
roŸ_
 =Åhis->
	`_buûdTªeWôhPo°MidOrdî
(
Ÿh
, 
mid
, 0, 
size
-1);

92 
BuûdTªeByMidAndLvlOrdî
:

93 
this
->
roŸ_
 =Åhis->
	`_buûdTªeWôhLvlMidOrdî
(
Ÿh
, 
mid
, 0, 
size
-1, size);

96 
BuûdTªeByBSTLvlOrdî
:

97 
°d
::
cout
 << "hîê-------" << std::
ídl
;

98 
this
->
roŸ_
 =Åhis->
	`_buûdTªeWôhB°LvlOrdî
(
Ÿh
, 
size
);

102 
throw
 "Unknow builtÅype";

104 
	}
}

106 
	gãm∂©e
 <
˛ass
 
	gT
>

107 
	gNode
<
	gT
>* 
	gBö¨yTªe
<T>::
_c⁄°ru˘WôhB°LvlOrdî
(
Node
<
T
> *
r
, T 
d©a
) {

109 i‡(
	gr
 =
nuŒ±r
) {

110  
√w
 
Node
<
T
>(
d©a
);

113 i‡(
	gthis
->
com∑ª_
(&(
r
->
d©a
), &data) <= 0) {

114 
r
->
l_chûd
 = 
this
->
_c⁄°ru˘WôhB°LvlOrdî
‘->l_chûd, 
d©a
);

116 
	gr
->
	gr_chûd
 = 
this
->
_c⁄°ru˘WôhB°LvlOrdî
(
r
->
r_chûd
, 
d©a
);

119  
	gr
;

122 
	gãm∂©e
 <
˛ass
 
	gT
>

123 
	gNode
<
	gT
>* 
	gBö¨yTªe
<T>::
	$_buûdTªeWôhB°LvlOrdî
(
T
* 
b°
, 
size
) {

124 
Node
<
T
>* 
roŸ
 = 
nuŒ±r
;

125 
°d
::
cout
 << "size->: " << 
size
 << std::
ídl
;

127 
i
=0; i<
size
; i++) {

128 
°d
::
cout
 << "b°[" << 
i
 << "] = " << 
b°
[i] << std::
ídl
;

129 
roŸ
 = 
this
->
	`_c⁄°ru˘WôhB°LvlOrdî
‘oŸ, 
b°
[
i
]);

131  
roŸ
;

132 
	}
}

134 
	gãm∂©e
 <
˛ass
 
	gT
>

135 
	gNode
<
	gT
>* 
	gBö¨yTªe
<T>::
	$_buûdTªeWôhPªMidOrdî
(
T
* 
¥e
, T* 
mid
, 
°¨t
, 
íd
) {

136 
ödex
 = 0;

138 i‡(
°¨t
 > 
íd
) {

139  
nuŒ±r
;

144 
Node
<
T
>* 
node
 = 
√w
 Node<T>(
¥e
[
ödex
++]);

145 i‡(
°¨t
 =
íd
) {

146 
this
->
size_
 += 1;

147  
node
;

151 
midIndex
 = 
this
->
	`_£¨ch
(
mid
, 
node
->
d©a
, 
°¨t
, 
íd
);

155 
node
->
l_chûd
 = 
this
->
	`_buûdTªeWôhPªMidOrdî
(
¥e
, 
mid
, 
°¨t
, 
midIndex
-1);

159 
node
->
r_chûd
 = 
this
->
	`_buûdTªeWôhPªMidOrdî
(
¥e
, 
mid
, 
midIndex
+1, 
íd
);

161 
this
->
size_
 += 1;

163 #i‡
TREE_DEBUG


164 
°d
::
cout
 << "node: " << 
node
->
d©a
;

165 i‡(
nuŒ±r
 !
node
->
l_chûd
Ë
°d
::
cout
 << "Ü-chûd: " <<Çode->l_chûd->
d©a
;

166 i‡(
nuŒ±r
 !
node
->
r_chûd
Ë
°d
::
cout
 << "Ñ-chûd: " <<Çode->r_chûd->
d©a
;

167 
°d
::
cout
 << std::
ídl
;

169  
node
;

170 
	}
}

173 
	gãm∂©e
 <
˛ass
 
	gT
>

174 
	gNode
<
	gT
>* 
	gBö¨yTªe
<T>::
	$_buûdTªeWôhPo°MidOrdî
(
T
* 
p°
, T* 
mid
, 
°¨t
, 
íd
) {

175 
ödex
 = 
íd
;

177 i‡(
íd
 < 
°¨t
) {

178  
nuŒ±r
;

183 
Node
<
T
>* 
node
 = 
√w
 Node<T>(
p°
[
ödex
--]);

185 i‡(
íd
 =
°¨t
) {

186 
this
->
size_
++;

187  
node
;

191 
midIndex
 = 
this
->
	`_£¨ch
(
mid
, 
node
->
d©a
, 
°¨t
, 
íd
);

194 
node
->
r_chûd
 = 
this
->
	`_buûdTªeWôhPo°MidOrdî
(
p°
, 
mid
, 
midIndex
+1, 
íd
);

197 
node
->
l_chûd
 = 
this
->
	`_buûdTªeWôhPo°MidOrdî
(
p°
, 
mid
, 
°¨t
, 
midIndex
-1);

199 
this
->
size_
++;

200  
node
;

201 
	}
}

203 
	gãm∂©e
 <
˛ass
 
	gT
>

204 
	gNode
<
	gT
>* 
	gBö¨yTªe
<T>::
	$_buûdTªeWôhLvlMidOrdî
(
T
* 
lvl
, T* 
mid
, 
°¨t
, 
íd
, 
Àn
) {

205 i‡(
°¨t
 > 
íd
) {

206  
nuŒ±r
;

209 #i‡
TREE_DEBUG


210 
°d
::
cout
 << std::
ídl
 << "0.Üvl-À¿" << 
Àn
 << ", " << "mid (" << 
°¨t
 << " ," << 
íd
 << "): ";

212 
k
=0; k<
Àn
; k++) {

213 
°d
::
cout
 << 
lvl
[
k
] << " ";

215 
°d
::
cout
 << std::
ídl
;

219 
Node
<
T
> *
node
 = 
√w
 Node<T>(
lvl
[0]);

220 i‡(
°¨t
 =
íd
) {

221 
this
->
size_
++;

222  
node
;

228 
roŸIdxInMid
 = 
this
->
	`_£¨ch
(
mid
, 
node
->
d©a
, 
°¨t
, 
íd
);

230 #i‡
TREE_DEBUG


231 
°d
::
cout
 << "1.--found mid(" << 
°¨t
 << " ," << 
íd
 << "), " << 
roŸIdxInMid
 << " : " << 
node
->
d©a
 << std::
ídl
;

233 
l_lvl_size
 = 
roŸIdxInMid
 - 
°¨t
;

234 
r_lvl_size
 = 
íd
 - 
roŸIdxInMid
;

239 
T
* 
l_lvl
 = 
this
->
	`_£¨chMidInLvl
(
mid
, 
°¨t
, 
roŸIdxInMid
-1, 
lvl
, 
Àn
);

240 #i‡
TREE_DEBUG


241 
°d
::
cout
 << "2.Ü-lv-sizê(" << 
°¨t
 << ", " << (
roŸIdxInMid
-1) << "): ";

242 
k
=0; k<
l_lvl_size
; k++) {

243 
°d
::
cout
 << 
l_lvl
[
k
] << " ";

245 
°d
::
cout
 << std::
ídl
;

250 
T
* 
r_lvl
 = 
this
->
	`_£¨chMidInLvl
(
mid
, 
roŸIdxInMid
 + 1, 
íd
, 
lvl
, 
Àn
);

251 #i‡
TREE_DEBUG


252 
°d
::
cout
 << "3.Ñ-lv-size: " << 
r_lvl_size
 << " (" << 
roŸIdxInMid
 << ", " << 
íd
 << ") ";

253 
k
=0; k<
r_lvl_size
; k++) {

254 
°d
::
cout
 << 
r_lvl
[
k
] << " ";

256 
°d
::
cout
 << std::
ídl
;

259 i‡(
nuŒ±r
 !
l_lvl
) {

260 
node
->
l_chûd
 = 
this
->
	`_buûdTªeWôhLvlMidOrdî
(
l_lvl
, 
mid
, 
°¨t
, 
roŸIdxInMid
-1, 
l_lvl_size
);

261 
dñëe
 [] 
l_lvl
;

264 i‡(
nuŒ±r
 !
r_lvl
) {

265 
node
->
r_chûd
 = 
this
->
	`_buûdTªeWôhLvlMidOrdî
(
r_lvl
, 
mid
, 
roŸIdxInMid
+1, 
íd
, 
r_lvl_size
);

266 
dñëe
 [] 
r_lvl
;

269 
this
->
size_
++;

270  
node
;

271 
	}
}

273 
	gãm∂©e
 <
˛ass
 
	gT
>

274 
T
* 
	gBö¨yTªe
<
	gT
>::
	$_£¨chMidInLvl
(
T
* 
mid
, 
°¨t
, 
íd
, T* 
lvl
, 
Àn
) {

275 i‡(
°¨t
 > 
íd
) {

276  
nuŒ±r
;

279 
j
 = 0;

280 
ønge
 = 
íd
 - 
°¨t
 + 1;

281 
T
* 
√w_lvl
 = 
√w
 T[
ønge
];

285 
i
=0; i<
Àn
; i++) {

286 
lvl_idx
 = 
this
->
	`_£¨ch
(
mid
, 
lvl
[
i
], 
°¨t
, 
íd
);

287 i‡(
lvl_idx
 != -1) {

288 
√w_lvl
[
j
++] = 
lvl
[
i
];

292  
√w_lvl
;

293 
	}
}

295 
	gãm∂©e
 <
˛ass
 
	gT
>

296 
	gBö¨yTªe
<
	gT
>::
	$_£¨ch
(
T
* 
mid
, T 
d©a
, 
°¨t
, 
íd
) {

297 
i
=
°¨t
; i<=
íd
; i++) {

298 
ªt
 = 
this
->
	`com∑ª_
(&(
mid
[
i
]), &
d©a
);

299 i‡(0 =
ªt
) {

300  
i
;

305 
	}
}

308 
	gãm∂©e
 <
˛ass
 
	gT
>

309 
	gBö¨yTªe
<
	gT
>::
_¥e_åavî£
(
Node
<
T
>* 
node
) {

310 i‡(
node
 =
nuŒ±r
) {

314 
	gthis
->
¥öt_
(
node
);

315 
	gthis
->
_¥e_åavî£
(
node
->
l_chûd
);

316 
	gthis
->
_¥e_åavî£
(
node
->
r_chûd
);

319 
	gãm∂©e
 <
˛ass
 
	gT
>

320 
	gBö¨yTªe
<
	gT
>::
_mid_åavî£
(
Node
<
T
>* 
node
) {

321 i‡(
node
 =
nuŒ±r
) {

325 
	gthis
->
_mid_åavî£
(
node
->
l_chûd
);

326 
	gthis
->
¥öt_
(
node
);

327 
	gthis
->
_mid_åavî£
(
node
->
r_chûd
);

330 
	gãm∂©e
 <
˛ass
 
	gT
>

331 
	gBö¨yTªe
<
	gT
>::
_po°_åavî£
(
Node
<
T
>* 
node
) {

332 i‡(
node
 =
nuŒ±r
 ||Çodê=
NULL
) {

336 
	gthis
->
_po°_åavî£
(
node
->
l_chûd
);

337 
	gthis
->
_po°_åavî£
(
node
->
r_chûd
);

338 
	gthis
->
¥öt_
(
node
);

342 
	gãm∂©e
 <
˛ass
 
	gT
>

343 
	gBö¨yTªe
<
	gT
>::
_bªadth_åavî£
(
Node
<
T
>* 
n
) {

344 
Queue
<
Node
<
T
>*, 6> 
	gq
;

345 
	gq
.
put
(
n
);

347 !
	gq
.
em±y
()) {

349 
	gNode
<
	gT
>* 
	g≤
 = 
q
.
gë
();

350 
	gthis
->
¥öt_
(
≤
);

352 i‡(
	g≤
->
	gl_chûd
 !
nuŒ±r
) {

353 
q
.
put
(
≤
->
l_chûd
);

356 i‡(
	g≤
->
	gr_chûd
 !
nuŒ±r
) {

357 
q
.
put
(
≤
->
r_chûd
);

362 
	gãm∂©e
 <
˛ass
 
	gT
>

363 
	gBö¨yTªe
<
	gT
>::
	$¥e_åavî£
() {

364 
this
->
	`_¥e_åavî£
—his->
roŸ_
);

365 
	}
}

367 
	gãm∂©e
 <
˛ass
 
	gT
>

368 
	gBö¨yTªe
<
	gT
>::
	$mid_åavî£
() {

369 
this
->
	`_mid_åavî£
—his->
roŸ_
);

370 
	}
}

372 
	gãm∂©e
 <
˛ass
 
	gT
>

373 
	gBö¨yTªe
<
	gT
>::
	$po°_åavî£
() {

374 
this
->
	`_po°_åavî£
—his->
roŸ_
);

375 
	}
}

377 
	gãm∂©e
 <
˛ass
 
	gT
>

378 
	gBö¨yTªe
<
	gT
>::
	$bªadth_åavî£
() {

379 
this
->
	`_bªadth_åavî£
—his->
roŸ_
);

380 
	}
}

382 
	gãm∂©e
 <
˛ass
 
	gT
>

383 
size_t
 
	gBö¨yTªe
<
	gT
>::
_dïth
(
Node
<
T
>* 
node
) {

384 i‡(
nuŒ±r
 =
node
) {

388 
size_t
 
	gl_dïth
 = 
_dïth
(
node
->
l_chûd
);

389 
size_t
 
	gr_dïth
 = 
_dïth
(
node
->
r_chûd
);

391  
	gl_dïth
 > 
	gr_dïth
 ?Ü_dïth + 1 : 
r_dïth
 + 1;

394 
	gãm∂©e
 <
˛ass
 
	gT
>

395 
size_t
 
	gBö¨yTªe
<
	gT
>::
	$dïth
() {

396  
this
->
	`_dïth
—his->
roŸ_
);

397 
	}
}

	@common.h

1 #i‚de‡
_COMMON_H_


2 
	#_COMMON_H_


	)

3 
	~<cm©h
>

6 
	#MAX_NODE_OF_LEVEL
(
l
Ë
	`pow
(2, (l)-1)

	)

9 
	#MAX_NODE_OF_HIGH
(
h
Ë(
	`pow
(2, hË- 1)

	)

16 (*
	tcom∑ª_t
)(*
	td1
, *
	td2
);

17 (*
	t¥öt_t
)(*
	td1
);

	@main.cc

1 
	~"bö¨y.h
"

2 
	~<io°ªam
>

4 
	$com∑ª
(* 
d1
, * 
d2
) {

5 
c1
 = *((*)
d1
);

6 
c2
 = *((*)
d2
);

8 i‡(
c1
 =
c2
) {

10 } i‡(
c1
 > 
c2
) {

15 
	}
}

17 
	$¥öt
(* 
d©a
) {

18 
c
 = *((*)
d©a
);

19 
°d
::
cout
 << 
c
 << " ";

20 
	}
}

22 
	$p_‹dî
(*
a
, 
size
) {

23 
i
=0; i<
size
; i++) {

24 
°d
::
cout
 << 
a
[
i
] << " ";

26 
°d
::
cout
 << std::
ídl
;

27 
	}
}

29 
	$maö
() {

30 
¥e
[] = {'A', 'B', 'D', 'E', 'C', 'F'};

31 
mid
[] = {'D', 'B', 'E', 'A', 'F', 'C'};

32 
p°
[] = {'D', 'E', 'B', 'F', 'C', 'A'};

33 
lvl
[] = {'A', 'B', 'C', 'D', 'E', 'F'};

34 
b°_lvl
[] = {'7', '4', '9', '3', '6', '8', '1', '5', '7'};

36 
°d
::
cout
 << "SRC-PREORDER ";

37 
	`p_‹dî
(
¥e
, 6);

38 
°d
::
cout
 << std::
ídl
;

40 
°d
::
cout
 << "MID-PREORDER ";

41 
	`p_‹dî
(
mid
, 6);

42 
°d
::
cout
 << std::
ídl
;

44 
°d
::
cout
 << "PST-PREORDER ";

45 
	`p_‹dî
(
p°
, 6);

46 
°d
::
cout
 << std::
ídl
;

48 
°d
::
cout
 << "LVL-PREORDER ";

49 
	`p_‹dî
(
lvl
, 6);

50 
°d
::
cout
 << std::
ídl
;

52 
°d
::
cout
 << "BST-LVLORDER ";

53 
	`p_‹dî
(
b°_lvl
, 9);

54 
°d
::
cout
 << std::
ídl
;

56 
Bö¨yTªe
<> 
	`bö¨yTªe
(
¥e
, 
mid
, 
BuûdTªeByMidAndPªOrdî
, 6, 
¥öt
, 
com∑ª
);

57 
Bö¨yTªe
<> 
	`bö¨yTªeTwo
(
p°
, 
mid
, 
BuûdTªeByMidAndP°Ordî
, 6, 
¥öt
, 
com∑ª
);

58 
Bö¨yTªe
<> 
	`bö¨yTªeThªe
(
lvl
, 
mid
, 
BuûdTªeByMidAndLvlOrdî
, 6, 
¥öt
, 
com∑ª
);

59 
Bö¨yTªe
<> 
	`bö¨yTªeFour
(
b°_lvl
, 
nuŒ±r
, 
BuûdTªeByBSTLvlOrdî
, 9, 
¥öt
, 
com∑ª
);

61 
°d
::
cout
 << "Bö¨y Tªêsize: " << 
bö¨yTªe
.
	`size
() << " vs "

62 << 
bö¨yTªeTwo
.
	`size
() << " vs "

63 << 
bö¨yTªeThªe
.
	`size
() << " vs "

64 << 
bö¨yTªeFour
.
	`size
(Ë<< 
°d
::
ídl
;

66 
°d
::
cout
 << "Bö¨y Tªêdïth: " << 
bö¨yTªe
.
	`dïth
() << " vs "

67 << 
bö¨yTªeTwo
.
	`dïth
() << " vs "

68 << 
bö¨yTªeThªe
.
	`dïth
() << " vs "

69 << 
bö¨yTªeFour
.
	`dïth
(Ë<< 
°d
::
ídl
;

70 
°d
::
cout
 << std::
ídl
;

72 
°d
::
cout
 << "DST-PREORDER-1 ";

73 
bö¨yTªe
.
	`¥e_åavî£
();

74 
°d
::
cout
 << std::
ídl
;

76 
°d
::
cout
 << "DST-PREORDER-2 ";

77 
bö¨yTªeTwo
.
	`¥e_åavî£
();

78 
°d
::
cout
 << std::
ídl
;

80 
°d
::
cout
 << "DST-PREORDER-3 ";

81 
bö¨yTªeThªe
.
	`¥e_åavî£
();

82 
°d
::
cout
 << std::
ídl
;

84 
°d
::
cout
 << "DST-PREORDER-4 ";

85 
bö¨yTªeFour
.
	`¥e_åavî£
();

86 
°d
::
cout
 << std::
ídl
 << std::endl;

88 
°d
::
cout
 << "MID-PREORDER-1 ";

89 
bö¨yTªe
.
	`mid_åavî£
();

90 
°d
::
cout
 << std::
ídl
;

92 
°d
::
cout
 << "MID-PREORDER-2 ";

93 
bö¨yTªeTwo
.
	`mid_åavî£
();

94 
°d
::
cout
 << std::
ídl
;

96 
°d
::
cout
 << "MID-PREORDER-3 ";

97 
bö¨yTªeThªe
.
	`mid_åavî£
();

98 
°d
::
cout
 << std::
ídl
;

100 
°d
::
cout
 << "MID-PREORDER-4 ";

101 
bö¨yTªeFour
.
	`mid_åavî£
();

102 
°d
::
cout
 << std::
ídl
 << std::endl;

104 
°d
::
cout
 << "PST-PREORDER-1 ";

105 
bö¨yTªe
.
	`po°_åavî£
();

106 
°d
::
cout
 << std::
ídl
;

108 
°d
::
cout
 << "PST-PREORDER-2 ";

109 
bö¨yTªeTwo
.
	`po°_åavî£
();

110 
°d
::
cout
 << std::
ídl
;

112 
°d
::
cout
 << "PST-PREORDER-3 ";

113 
bö¨yTªeThªe
.
	`po°_åavî£
();

114 
°d
::
cout
 << std::
ídl
;

116 
°d
::
cout
 << "PST-PREORDER-4 ";

117 
bö¨yTªeFour
.
	`po°_åavî£
();

118 
°d
::
cout
 << std::
ídl
 << std::endl;

120 
°d
::
cout
 << "LVL-PREORDER-1 ";

121 
bö¨yTªe
.
	`bªadth_åavî£
();

122 
°d
::
cout
 << std::
ídl
;

124 
°d
::
cout
 << "LVL-PREORDER-2 ";

125 
bö¨yTªeTwo
.
	`bªadth_åavî£
();

126 
°d
::
cout
 << std::
ídl
;

128 
°d
::
cout
 << "LVL-PREORDER-3 ";

129 
bö¨yTªeThªe
.
	`bªadth_åavî£
();

130 
°d
::
cout
 << std::
ídl
;

132 
°d
::
cout
 << "LVL-PREORDER-4 ";

133 
bö¨yTªeFour
.
	`bªadth_åavî£
();

134 
°d
::
cout
 << std::
ídl
 << std::endl;

137 
	}
}

	@
1
.
1
/usr/include
3
26
binary.h
common.h
main.cc
